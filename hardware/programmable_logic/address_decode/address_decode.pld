GAL22V10
AddrDecode

Clock  RW     VPA    VDA    A19    A18    A17    A16    A15    A14    A13    GND
S0     /RAM0  /RAM1  /ROM   /IO    /RD    /WR    S1     S2     S3     S4     VCC

; ROM is the top 8 KiB of bank 0.
; prefix is 0000 111xxxxx xxxxxxxx
ROM = /A19*/A18*/A17*/A16*A15*A14*A13

; IO addresses are mapped below ROM in bank 0.
; prefix is 0000 110xxxxx xxxxxxxx
IO = /A19*/A18*/A17*/A16*A15*A14*/A13

; RAM0 is selected for any address that starts with a 0, but does *not* match 0000 11xxxxxx xxxxxxxx
RAM0 = /A19*A18 + /A19*A17 + /A19*A16 + /A19*/A15 + /A19*/A14

; RAM1 is selected for any address that matches 1xxx xxxxxxxx xxxxxxxx
RAM1 = A19

; Qualify reads/writes with clock
RD = Clock*RW
WR = Clock*/RW

; S0-S4 are inputs and outputs with no defined use.
S1 = S0
S2 = S0
S3 = S0
S4 = S0

DESCRIPTION

Address decode logic for 65C816 computer.

ROM is top 8K of bank 0, I/O is 8k below that, everything else is RAM (two chips).

